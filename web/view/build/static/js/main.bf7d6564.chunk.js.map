{"version":3,"sources":["CommonMessageList.tsx","CommonButton.tsx","KeiyakuTable.tsx","index.tsx"],"names":["messageListContext","React","createContext","useMessageListContext","useContext","MessageListProvider","props","useState","messageList","setMessageList","provider","setMessages","messages","undefined","addMessages","prev","message","length","maxMessageNum","shift","concat","addMessage","clearMessage","Provider","value","children","MessageList","context","className","map","index","category","toString","PostButton","iconAnimetionFlg","setIconAnimetionFlg","mounted","useRef","useEffect","current","onClick","e","form","FormData","Object","keys","params","forEach","key","append","axios","post","url","then","response","onSuccess","catch","exception","onException","FileUploadButton","type","id","name","onChange","currentTarget","files","file","headers","htmlFor","FileDownloadButton","responseType","mineType","blob","Blob","data","fileURL","window","URL","createObjectURL","fileLink","document","createElement","href","setAttribute","filename","body","appendChild","click","KeiyakuTable","keiyakuRecords","setKeiyakuRecords","getAnalyzeFileName","orgfilename","substr","lastIndexOf","onDeleteSuccess","seqid","records","filter","record","deleteRecord","get","KEIYAKU_GROUP_DOMAIN","code","addRecord","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bf7d6564.chunk.js","sourcesContent":["import React, { useState, ReactNode } from \"react\";\r\nimport './CommonMessageList.css'\r\n\r\ntype Props = {\r\n    children: ReactNode,\r\n    maxMessageNum: number\r\n}\r\n\r\ntype MessageType = {\r\n    category: string,\r\n    message: string\r\n}\r\n\r\ntype MessageListContextType = {\r\n    messageList: MessageType[],\r\n    addMessages: (messages: MessageType[]) => void,\r\n    setMessages: (messages: MessageType[]) => void,\r\n    addMessage: (message: MessageType) => void,\r\n    clearMessage: () => void\r\n};\r\n\r\nconst messageListContext = React.createContext<MessageListContextType | null>(null);\r\n\r\nexport function useMessageListContext() {\r\n  return React.useContext(messageListContext)!;\r\n}\r\n\r\nexport const MessageListProvider = (props: Props) => {\r\n    const [messageList, setMessageList] = useState<MessageType[]>([]);\r\n    const provider: MessageListContextType = {\r\n        messageList: messageList,\r\n        setMessages: setMessages,\r\n        addMessages: addMessages,\r\n        addMessage: addMessage,\r\n        clearMessage: clearMessage,\r\n    };\r\n\r\n    function setMessages(messages: MessageType[]) {\r\n        if(messages === null || messages === undefined) {\r\n            return;\r\n        }\r\n        \r\n        setMessageList(messages);\r\n    }\r\n\r\n    function addMessages(messages: MessageType[]) {\r\n        if(messages === null || messages === undefined) {\r\n            return;\r\n        }\r\n\r\n        setMessageList((prev) => {\r\n            for(const message of messages) {\r\n                if(prev.length >= props.maxMessageNum) {\r\n                    prev.shift();\r\n                }\r\n                prev = prev.concat(message);\r\n            }\r\n\r\n            return prev;\r\n        });\r\n    }\r\n\r\n    function addMessage(message: MessageType) {\r\n        setMessageList((prev) => {\r\n            if(prev.length >= props.maxMessageNum) {\r\n                prev.shift();\r\n            }\r\n            return prev.concat(message);\r\n        });\r\n    }\r\n  \r\n    function clearMessage() {\r\n        setMessageList([]);\r\n    }\r\n    \r\n    return (\r\n        <messageListContext.Provider value={provider}>\r\n            { props.children }\r\n        </messageListContext.Provider>\r\n    )\r\n}\r\n\r\nexport const MessageList = () => {\r\n    const context = useMessageListContext();\r\n    \r\n    return (\r\n        <ul className=\"MessageList\">\r\n            { context.messageList.map((message, index) =>\r\n                <li className={ \"message_\" + message.category } key={index.toString()}>{ message.message }</li>\r\n            )}\r\n        </ul>\r\n    )\r\n}","import React, { useState, ReactNode, useEffect, useRef, MutableRefObject } from \"react\";\r\nimport axios, { AxiosResponse, AxiosError } from 'axios'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport './CommonButton.css'\r\n\r\ntype NormalButtonProps = {\r\n    children: ReactNode,\r\n    onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\r\n}\r\n\r\ntype PostButtonProps = {\r\n    children: ReactNode,\r\n    url: string,\r\n    params: { [key: string]: any },\r\n    onSuccess?: (response: AxiosResponse) => void,\r\n    onException?: (exception: AxiosError) => void,\r\n}\r\n\r\ntype FileUploadButtonProps = {\r\n    children: ReactNode,\r\n    url: string,\r\n    onSuccess?: (response: AxiosResponse) => void,\r\n    onException?: (exception: AxiosError) => void,\r\n}\r\n\r\ntype FileDownloadButtonProps = {\r\n    children: ReactNode,\r\n    url: string,\r\n    filename: string,\r\n    params: { [key: string]: any },\r\n    onSuccess?: (response: AxiosResponse) => void,\r\n    onException?: (exception: AxiosError) => void,\r\n}\r\n\r\nexport const NormalButton = (props: NormalButtonProps) => {\r\n\r\n    function onClickFunction(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        props.onClick(e);\r\n    }\r\n\r\n    return (\r\n        <button className=\"ui blue button\" onClick={onClickFunction}>{props.children}</button>\r\n    )\r\n}\r\n\r\nexport const PostButton = (props: PostButtonProps) => {\r\n    const [ iconAnimetionFlg, setIconAnimetionFlg ] = useState(false);\r\n    const mounted: MutableRefObject<boolean> = useRef(false);\r\n\r\n    useEffect(() => {\r\n        mounted.current = true;\r\n        return () => { mounted.current = false; }\r\n    }, [])\r\n\r\n    function onClickFunction(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        setIconAnimetionFlg(true);\r\n        const form = new FormData();\r\n        Object.keys(props.params).forEach((key) => form.append(key, props.params[key]));\r\n        axios.post(props.url, form, {\r\n        }).then((response: AxiosResponse) => {\r\n            if(props.onSuccess !== undefined) {\r\n                props.onSuccess(response);\r\n            }\r\n\r\n            if(mounted.current) {\r\n                setIconAnimetionFlg(false);\r\n            }\r\n        }).catch((exception: AxiosError) => {\r\n            if(props.onException !== undefined) {\r\n                props.onException(exception);\r\n            }\r\n\r\n            if(mounted.current) {\r\n                setIconAnimetionFlg(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <button className=\"ui blue left floated button\" onClick={onClickFunction}>\r\n            <i className={\"ui play icon \" + (iconAnimetionFlg ? \"loading\" : \"\")}></i> \r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport const FileUploadButton = (props: FileUploadButtonProps) => {\r\n    const [ iconAnimetionFlg, setIconAnimetionFlg ] = useState(false);\r\n  \r\n    function onChangeFunction(e: React.ChangeEvent<HTMLInputElement>) {\r\n        if (e.currentTarget.files === null) {\r\n            return;\r\n        }\r\n\r\n        setIconAnimetionFlg(true);\r\n        const file = e.currentTarget.files[0];\r\n        const params = new FormData();\r\n        params.append('file', file);\r\n        axios.post(props.url, params, {\r\n            headers: {\r\n                'content-type': 'multipart/form-data',\r\n            },\r\n        }).then((response: AxiosResponse) => {\r\n            if(props.onSuccess !== undefined) {\r\n                props.onSuccess(response);\r\n            }\r\n\r\n            setIconAnimetionFlg(false);\r\n        }).catch((exception: AxiosError) => {\r\n            if(props.onException !== undefined) {\r\n                props.onException(exception);\r\n            }\r\n\r\n            setIconAnimetionFlg(false);\r\n        })\r\n    }\r\n  \r\n    return (\r\n        <span>\r\n            <input type=\"file\" className=\"FileUploadButton\" id=\"FileUploadButton\" name=\"FileUploadButton\" onChange={onChangeFunction} />\r\n            <label htmlFor=\"FileUploadButton\" className=\"ui blue left floated button\">\r\n                <i className={\"ui upload icon \" + (iconAnimetionFlg ? \"loading\" : \"\")}></i> \r\n                { props.children }\r\n            </label>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport const FileDownloadButton = (props: FileDownloadButtonProps) => {\r\n    const [ iconAnimetionFlg, setIconAnimetionFlg ] = useState(false);\r\n  \r\n    function onClickFunction(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        setIconAnimetionFlg(true);\r\n        const form = new FormData();\r\n        Object.keys(props.params).forEach((key) => form.append(key, props.params[key]));\r\n        axios.post(props.url, form, {\r\n            responseType: \"blob\",\r\n        }).then((response: AxiosResponse) => {\r\n            const mineType = response.headers[\"content-type\"];\r\n            const blob = new Blob([response.data], { type: mineType });\r\n            const fileURL = window.URL.createObjectURL(blob);\r\n            const fileLink = document.createElement('a');\r\n            fileLink.href = fileURL;\r\n            fileLink.setAttribute('download', props.filename);\r\n            document.body.appendChild(fileLink);\r\n            fileLink.click();\r\n\r\n            if(props.onSuccess !== undefined) {\r\n                props.onSuccess(response);\r\n            }\r\n            \r\n            setIconAnimetionFlg(false);\r\n        }).catch((exception: AxiosError) => {\r\n            if(props.onException !== undefined) {\r\n                props.onException(exception);\r\n            }\r\n\r\n            setIconAnimetionFlg(false);\r\n        });\r\n    }\r\n  \r\n    return (\r\n        <button className=\"ui blue left floated button\" onClick={onClickFunction}>\r\n            <i className={\"ui download icon \" + (iconAnimetionFlg ? \"loading\" : \"\")}></i> \r\n            {props.children}\r\n        </button>\r\n    )\r\n}","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport './KeiyakuTable.css'\r\nimport axios, { AxiosResponse, AxiosError } from 'axios'\r\nimport { PostButton, FileUploadButton, FileDownloadButton } from \"./CommonButton\"\r\nimport { useMessageListContext } from \"./CommonMessageList\";\r\n\r\nconst KEIYAKU_GROUP_DOMAIN = process.env.NODE_ENV === \"development\" ? \"http://localhost\" : \"\";\r\n\r\ntype KeiyakuRecordType = {\r\n  seqid: string;\r\n  filename: string;\r\n}\r\n\r\nexport const KeiyakuTable = () => {\r\n  const [keiyakuRecords, setKeiyakuRecords] = useState<KeiyakuRecordType[]>([]);\r\n  const { addMessage, addMessages } = useMessageListContext();\r\n\r\n  useEffect(() => {\r\n    axios.get(KEIYAKU_GROUP_DOMAIN + '/keiyaku_group/api/list')\r\n      .then((response: AxiosResponse) => {\r\n        setKeiyakuRecords(response.data[\"data\"])\r\n        addMessages(response.data[\"message\"])\r\n      })\r\n  },[])\r\n\r\n  function addRecord(seqid: string, filename: string) {\r\n    setKeiyakuRecords((prev) => prev.concat({seqid: seqid, filename: filename }));\r\n  }\r\n\r\n  function deleteRecord(seqid: string) {\r\n    const records = keiyakuRecords.filter((record) => record.seqid !== seqid);\r\n    setKeiyakuRecords(records);\r\n  }\r\n\r\n  function getAnalyzeFileName(orgfilename: string) {\r\n    return \"ANALYZE_\" + orgfilename.substr(0, orgfilename.lastIndexOf('.')) + \".txt\";\r\n  }\r\n\r\n  function getTextFileName(orgfilename: string) {\r\n    return \"TEXT_\" + orgfilename.substr(0, orgfilename.lastIndexOf('.')) + \".txt\";\r\n  }\r\n\r\n  function onFileUploadSuccess() {\r\n    return (response: AxiosResponse) => {\r\n      const code = response.data[\"code\"];\r\n      const seqid = response.data[\"data\"][\"seqid\"];\r\n      const filename = response.data[\"data\"][\"filename\"];\r\n      \r\n      if(code === 0) {\r\n        addRecord(seqid, filename); \r\n      }\r\n\r\n      addMessages(response.data[\"message\"])\r\n    }\r\n  }\r\n\r\n  function onDeleteSuccess(seqid: string) {\r\n    return (response: AxiosResponse) => {\r\n      deleteRecord(seqid);\r\n    }\r\n  }\r\n\r\n  function onSuccess(response: AxiosResponse) {\r\n  }\r\n\r\n  function onException(message: string) {\r\n    return (exception: AxiosError) => {\r\n      addMessage({\"category\":\"error\", \"message\": message})\r\n    }\r\n  }\r\n\r\n  return (\r\n\t\t<div> \r\n      <FileUploadButton url={ KEIYAKU_GROUP_DOMAIN + '/keiyaku_group/api/upload' } onSuccess={onFileUploadSuccess()} onException={onException(\"契約書のアップロードに失敗しました\")}>契約書アップロード</FileUploadButton>\r\n\t\t\t<table className=\"ui selectable table\">\r\n\t\t\t<thead>\r\n\t\t\t<tr>\r\n\t\t\t\t<th className=\"th_no\">No</th>\r\n\t\t\t\t<th className=\"th_filename\">ファイル名</th>\r\n\t\t\t\t<th className=\"th_button\"></th>\r\n\t\t\t</tr>\r\n\t\t\t</thead>\t\t\t\r\n\t\t\t<tbody>\r\n        { keiyakuRecords.map((record, index) =>\r\n          <tr key={record.seqid}>\r\n            <td className=\"td_no\">{index+1}</td>\r\n            <td className=\"td_filename\">{record.filename}</td>\r\n            <td className=\"td_button\">\r\n              <FileDownloadButton url={ KEIYAKU_GROUP_DOMAIN + '/keiyaku_group/api/download' } filename={record.filename} params={{\"seqid\": record.seqid}}\r\n                onSuccess={onSuccess} onException={onException(record.filename+\"のダウンロードに失敗しました\")}>ダウンロード</FileDownloadButton>\r\n              <FileDownloadButton url={ KEIYAKU_GROUP_DOMAIN + '/keiyaku_group/api/download_txt' } filename={getTextFileName(record.filename)} params={{\"seqid\": record.seqid}}\r\n                onSuccess={onSuccess} onException={onException(record.filename+\"のダウンロード(txt)に失敗しました\")}>ダウンロード(txt)</FileDownloadButton>\r\n              <FileDownloadButton url={ KEIYAKU_GROUP_DOMAIN + '/keiyaku_group/api/analyze' } filename={getAnalyzeFileName(record.filename)} params={{\"seqid\": record.seqid}}\r\n                onSuccess={onSuccess} onException={onException(record.filename+\"の解析に失敗しました\")}>解析</FileDownloadButton>\r\n              <PostButton url={ KEIYAKU_GROUP_DOMAIN + '/keiyaku_group/api/delete' } params={{\"seqid\": record.seqid}}\r\n                onSuccess={onDeleteSuccess(record.seqid)} onException={onException(record.filename+\"の削除に失敗しました\")}>削除</PostButton>\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n\t\t\t</table>\t\t\t\r\n\t\t</div>\r\n  );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { MessageListProvider, MessageList } from './CommonMessageList';\nimport { KeiyakuTable } from './KeiyakuTable';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"ui container\">\n      <h1>契約文章解析</h1>\n    </div>    \n    <MessageListProvider maxMessageNum={5}>\n      <div className=\"ui container\">\n        <KeiyakuTable />\n      </div>\n      <div className=\"ui container\">\n        <MessageList />\n      </div>\n    </MessageListProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}